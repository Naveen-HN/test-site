{"ast":null,"code":"var _jsxFileName = \"/Users/nanjundamurthy/Desktop/Web/React/test-site/src/App.js\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport \"./styles.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\n\nconst express = require(\"express\");\n\nconst app = express();\nconst PORT = process.env.PORT || 4000;\napp.listen(PORT, console.log(`Server started on port ${PORT}`));\n\nfunction App() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"body\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" This is the main Page \"), \" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \" \", React.createElement(Route, {\n    path: \"/register\",\n    component: Register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \" \", React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), \" \"), \" \");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nanjundamurthy/Desktop/Web/React/test-site/src/App.js"],"names":["React","Header","BrowserRouter","Router","Route","Register","Login","express","require","app","PORT","process","env","listen","console","log","App","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,cAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;AACA,MAAMG,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAD,GAAG,CAACI,MAAJ,CAAWH,IAAX,EAAiBI,OAAO,CAACC,GAAR,CAAa,0BAAyBL,IAAK,EAA3C,CAAjB;;AAEA,SAASM,GAAT,GAAe;AACb,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,MAAM,EAAEC,KAAK,IACX,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EACmC,GADnC,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUK,GAVL,EAWE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAEZ,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAWkD,GAXlD,EAYE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAY4C,GAZ5C,CADF,EAcU,GAdV,CADF;AAkBD;;AAED,eAAeU,GAAf","sourcesContent":["import React from \"react\";\nimport Header from \"./components/Header\";\nimport \"./styles.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\n\nconst express = require(\"express\");\n\nconst app = express();\nconst PORT = process.env.PORT || 4000;\n\napp.listen(PORT, console.log(`Server started on port ${PORT}`));\n\nfunction App() {\n  return (\n    <Router>\n      <body>\n        <Header />\n        <Route\n          exact\n          path=\"/\"\n          render={props => (\n            <React.Fragment>\n              <h1> This is the main Page </h1>{\" \"}\n            </React.Fragment>\n          )}\n        />{\" \"}\n        <Route path=\"/register\" component={Register} />{\" \"}\n        <Route path=\"/login\" component={Login} />{\" \"}\n      </body>{\" \"}\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
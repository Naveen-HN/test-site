{"ast":null,"code":"import * as Types from \"../Actions/types\";\nconst initialState = {\n  user: {\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    userName: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }\n};\n\nconst handleCreateUserResponseSuccess = (state, action) => {\n  let newState = { ...state\n  };\n\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, {\n      result: Object.assign({}, action.result)\n    });\n  }\n\n  return { ...newState\n  };\n};\n\nconst handleCreateUserResponseFailure = (state, action) => {\n  let newState = { ...state\n  };\n  return { ...newState\n  };\n};\n\nconst createUserReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.CREATE_USER:\n      return {\n        user: { ...state.user.concat(action.payload)\n        }\n      };\n\n    case Types.CREATE_USER_RESPONSE_SUCCESS:\n      return handleCreateUserResponseSuccess(state, action);\n\n    case Types.CREATE_USER_RESPONSE_FAILURE:\n      return handleCreateUserResponseFailure(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default createUserReducer;","map":{"version":3,"sources":["/Users/nanjundamurthy/Desktop/Web/React/test-site/src/Reducers/createUserReducer.js"],"names":["Types","initialState","user","firstName","lastName","phone","userName","password","confirmPassword","handleCreateUserResponseSuccess","state","action","newState","result","undefined","Object","assign","handleCreateUserResponseFailure","createUserReducer","type","CREATE_USER","concat","payload","CREATE_USER_RESPONSE_SUCCESS","CREATE_USER_RESPONSE_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,QAAQ,EAAE,EAJN;AAKJC,IAAAA,QAAQ,EAAE,EALN;AAMJC,IAAAA,eAAe,EAAE;AANb;AADa,CAArB;;AAWA,MAAMC,+BAA+B,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzD,MAAIC,QAAQ,GAAG,EACb,GAAGF;AADU,GAAf;;AAGA,MAAIC,MAAM,CAACE,MAAP,KAAkBC,SAAtB,EAAiC;AAC/BF,IAAAA,QAAQ,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAClCG,MAAAA,MAAM,EAAEE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAM,CAACE,MAAzB;AAD0B,KAAzB,CAAX;AAGD;;AACD,SAAO,EACL,GAAGD;AADE,GAAP;AAGD,CAZD;;AAcA,MAAMK,+BAA+B,GAAG,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACzD,MAAIC,QAAQ,GAAG,EACb,GAAGF;AADU,GAAf;AAGA,SAAO,EACL,GAAGE;AADE,GAAP;AAGD,CAPD;;AASA,MAAMM,iBAAiB,GAAG,CAACR,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAACQ,IAAf;AACE,SAAKnB,KAAK,CAACoB,WAAX;AACE,aAAO;AACLlB,QAAAA,IAAI,EAAE,EACJ,GAAGQ,KAAK,CAACR,IAAN,CAAWmB,MAAX,CAAkBV,MAAM,CAACW,OAAzB;AADC;AADD,OAAP;;AAKF,SAAKtB,KAAK,CAACuB,4BAAX;AACE,aAAOd,+BAA+B,CAACC,KAAD,EAAQC,MAAR,CAAtC;;AACF,SAAKX,KAAK,CAACwB,4BAAX;AACE,aAAOP,+BAA+B,CAACP,KAAD,EAAQC,MAAR,CAAtC;;AACF;AACE,aAAOD,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeQ,iBAAf","sourcesContent":["import * as Types from \"../Actions/types\";\n\nconst initialState = {\n  user: {\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    userName: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }\n};\n\nconst handleCreateUserResponseSuccess = (state, action) => {\n  let newState = {\n    ...state\n  };\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, {\n      result: Object.assign({}, action.result)\n    });\n  }\n  return {\n    ...newState\n  };\n};\n\nconst handleCreateUserResponseFailure = (state, action) => {\n  let newState = {\n    ...state\n  };\n  return {\n    ...newState\n  };\n};\n\nconst createUserReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.CREATE_USER:\n      return {\n        user: {\n          ...state.user.concat(action.payload)\n        }\n      };\n    case Types.CREATE_USER_RESPONSE_SUCCESS:\n      return handleCreateUserResponseSuccess(state, action);\n    case Types.CREATE_USER_RESPONSE_FAILURE:\n      return handleCreateUserResponseFailure(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default createUserReducer;\n"]},"metadata":{},"sourceType":"module"}